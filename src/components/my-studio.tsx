import { Card, CardContent } from "src/components/ui/card"

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/1frRkxHriYN
 */
import { Badge } from "src/components/ui/badge"
import { Button } from "src/components/ui/button"
import { Checkbox } from "src/components/ui/checkbox"
import { Label } from "src/components/ui/label"
import { Progress } from "./ui/progress"
import type { StudioInfo } from "lib/types"
import type { demoStudent } from "~/pages/studios/[slug]"
import { useState } from "react"

type Props = {
  name: StudioInfo["name"],
  students: demoStudent[],
}

const tasks: string[] = [
  "Set your availability",
  "Send out code to students",
  "Create your schedule",
]

const AVAILABILITY = 0

export function MyStudio(props: Props) {
  const [taskStatus, setTaskStatus] = useState<boolean[]>([true, false, false])
  return (
    <main className="w-full h-full py-1 px-4 md:py-1 md:px-8">
      <section className="mt-12 mb-12">
        <div className="flex items-center justify-between">
          <h2 className="text-2xl font-bold">Progress</h2>
          <Badge>{taskStatus.reduce((acc, curr) => acc + (curr ? 1 : 0), 0)}/3</Badge>
        </div>
         <Progress className="mt-2" value={
        (taskStatus.reduce((acc, curr) => acc + (curr ? 1 : 0), 0) / taskStatus.length) * 100
      }/>
      </section>
     
      <header className="mb-8">
        <h1 className="text-4xl font-bold tracking-tight">{props.name}</h1>
      </header>
      <div className="flex space-x-10">
        <section className="space-y-6 w-2/3">
          {tasks.map((task, i) => (
            <Card 
              key={task}
              className={`rounded-md cursor-pointer hover:bg-gray-300
              ${taskStatus[i] && "bg-gray-100 hover:bg-gray-100 cursor-auto"} 
              `}
              // ${isHovered ? 'bg-gray-300' : 'bg-white'}`} 
              onClick={() => {
                if (taskStatus[i]) return
                setTaskStatus(taskStatus.map((status, j) => i === j ? true : status))
              }}
            >
              <CardContent className="flex items-center space-x-2 p-4 h-[10vh]">
                <Checkbox id={`task-${i}`} checked={taskStatus[i]} />
                <p>
                  <Label 
                    className={`mx-4 
                    ${taskStatus[i] && "line-through"}`} 
                    htmlFor={`task-${i}`}
                  >{task}</Label>
                </p>
              </CardContent>
            </Card>
          ))}
        </section>
        <aside className="w-1/3 space-y-6">
          <section className="bg-gray-100 p-4 rounded-md">
            <h2 className="text-xl font-bold mb-4">Enrolled Students</h2>
            <ul className="space-y-2 flex flex-col">
              {props.students.map((student) => (
                <li key={student.name} className="flex flex-row">
                  <p className="font-mono">{student.name}, {student.email}</p>
                  <Badge className="w-auto mx-4">Not Started</Badge>
                </li>
              ))} 
            </ul>
          </section>
          <section className="bg-gray-100 p-4 rounded-md">
            <h2 className="text-xl font-bold mb-4">Admin Tasks</h2>
            <div className="space-y-2">
              <Button className="w-full">Manage Students</Button>
              <Button className="w-full">Update Tasks</Button>
              <Button className="w-full">Settings</Button>
              {taskStatus[AVAILABILITY] && <Button className="w-full">Edit Your Availability</Button>}
            </div>
          </section>
        </aside>
      </div>
    </main>
  )
}
